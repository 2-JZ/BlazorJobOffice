@page "/Contacts"
@attribute [Authorize]
@inject IContactsService ContactsService
@inject ILocalStorageService LocalStorageService

<div>
    <a class="btn btn-primary" href='/Contacts/addContact'>Add</a>
</div>

<div class="card mt-4">
    <h4 class="card-header">Contacts</h4>

    <div class="card-body">
        <h6>Contacts from secure api end point</h6>
        @if (loading)
        {
            <div class="spinner-border spinner-border-sm"></div>
        }
        @if (contacts != null)
        {
            <ul>
                @foreach (var contact in contacts)
                {
                    <tr>
                        <td>@contact.Id</td>
                        <td>@contact.Email</td>
                        <td>@contact.Telephone</td>
                        <td>
                            @if (userMe.Role != Role.Developer)
                            {
                                <a class="btn btn-primary" href='/Contacts/@contact.Id'>Edit</a>
                                <a class="btn btn-danger" @onclick="() => DeleteContact(contact.Id)">Delete</a>
                            }
                        </td>
                    </tr>
                }
            </ul>
        }
    </div>
</div>

@code {
    private bool loading;
    private User userMe;

    private IEnumerable<Contact> contacts;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        contacts = await ContactsService.GetAll();
        userMe = await LocalStorageService.GetItem<User>("user");
        loading = false;
    }

    protected async Task DeleteContact(int id)
    {
        await ContactsService.Delete(id);
        contacts = await ContactsService.GetAll();
    }
}