@page "/Category/AddCategory"
@using System.IO
@attribute [Authorize]
@inject ICategoriesService CategoriesService
@inject NavigationManager NavigationManager

<h1>Add Category</h1>

<div class="row">
    <div class="col-md-4">
        <form>
            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                <input id="Name" class="form-control" @bind-value="@category.Name" />

                <label for="Description" class="control-label">Description</label>
                <input id="Description" class="form-control" @bind-value="@category.Description" />

                <label for="ParentCategoryId" class="control-label">Parent Category ID</label>
                <input id="ParentCategoryId" class="form-control" @bind-value="@category.ParentCategoryId" />

                <label for="Image" class="control-label">Image</label>
                <InputFile id="Image" OnChange="LoadImage" />
            </div>
            <div class="form-group">
                <button type="button" class="btn btn-primary" @onclick="CreateCategory">Create</button>
                <button type="button" class="btn btn-danger" @onclick="Cancel">Cancel</button>
            </div>
        </form>
    </div>
</div>

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

@code {
    private Category category = new Category();
    private byte[] imageBytes; // Store the image as a byte array
    private string errorMessage;

    // Method to convert the selected image file to a byte array
    private async void LoadImage(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            using (var memoryStream = new MemoryStream())
            {
                await file.OpenReadStream(maxAllowedSize: 1024 * 1024 * 15).CopyToAsync(memoryStream);
                imageBytes = memoryStream.ToArray(); // Store image as byte array
            }
        }
    }

    private async Task CreateCategory()
    {
        try
        {
            category.ImageData = imageBytes;
            // Call the service method to create the category with image bytes
            await CategoriesService.CreateCategory(category);
            NavigationManager.NavigateTo("/Category");
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/Category");
    }
}
