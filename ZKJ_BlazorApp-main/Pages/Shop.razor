@page "/shop"
@inject ICategoriesService CategoriesService
@inject NavigationManager NavigationManager

<h3>Shop</h3>

@if (categories == null)
{
    <p>Loading categories...</p>
}
else
{
    <div class="category-grid">
        @foreach (var category in categories)
        {
            <div class="category-card" @onclick="() => NavigateToCategory(category.Id)">
                @if (category.ImageData != null && category.ImageData.Length > 0)
                {
                    <!-- Display image from binary data (Base64) -->
                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(category.ImageData)" alt="@category.Name" class="category-image" />
                }
                else if (!string.IsNullOrEmpty(category.ImagePath))
                {
                    <!-- If there's no binary data, use the path (local or URL) -->
                    <img src="@category.ImagePath" alt="@category.Name" class="category-image" />
                }
                else
                {
                    <!-- Fallback image if no data or path -->
                    <img src="/images/no-photo.png" alt="No Image Available" class="category-image" />
                }
                <h4>@category.Name</h4>
            </div>
        }
    </div>
}

@code {
    private IEnumerable<Category> categories;

    protected override async Task OnInitializedAsync()
    {
        // Fetching only top-level categories (parent categories)
        categories = await CategoriesService.GetAll();
        categories = categories.Where(c => c.ParentCategoryId == null).ToList();
    }

    private void NavigateToCategory(int categoryId)
    {
        // Navigating to the subcategories page
        NavigationManager.NavigateTo($"/shop/subcategories/{categoryId}");
    }
}
