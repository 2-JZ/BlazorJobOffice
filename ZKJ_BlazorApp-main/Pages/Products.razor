@page "/Products"
@attribute [Authorize]
@inject IProductsService ProductsService
@inject ILocalStorageService LocalStorageService

<div>
    <a class="btn btn-primary" href='/Products/addProduct'>Add</a>
</div>

<div class="card mt-4">
    <h4 class="card-header">Products</h4>
    <div class="card-body">
        <h6>Products from secure API endpoint</h6>
        @if (loading)
        {
            <div class="spinner-border spinner-border-sm"></div>
        }
        else if (products != null)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Product Name</th>
                        <th>Price (Brutto)</th>
                        <th>Category</th>
                        <th>Image</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in products)
                    {
                        <tr>
                            <td>@product.Id</td>
                            <td>@product.ProductName</td>
                            <td>@product.UnitPriceBrutto</td>
                            <td>@product.Category?.Name</td>
                            <td>
                                @if (product.ImageData != null)
                                {
                                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(product.ImageData)" alt="Product Image" width="100" />
                                }
                                else
                                {
                                    <span>No Image</span>
                                }
                            </td>
                            <td>
                                @if (userMe.Role == Role.Manager || userMe.Role == Role.CEO || userMe.Role == Role.Admin)
                                {
                                    <a class="btn btn-primary me-2" href='/products/@product.Id'>Edit</a>
                                    <a class="btn btn-danger" @onclick="() => DeleteProduct(product.Id)">Delete</a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

@code {
    private bool loading;
    private User userMe;
    private IEnumerable<Product> products;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        try
        {
            products = await ProductsService.GetAll();
            userMe = await LocalStorageService.GetItem<User>("user");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading products: {ex.Message}");
        }
        loading = false;
    }

    protected async Task DeleteProduct(int id)
    {
        try
        {
            await ProductsService.Delete(id);
            products = await ProductsService.GetAll(); // Refresh the product list after deletion
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting product: {ex.Message}");
        }
    }
}
